import pandas as pd

def calculate_demographic_data():
    # Read data from file
    df = pd.read_csv("adult.data.csv")
    
    # 1. Number of people per race
    race_count = df["race"].value_counts()
    
    # 2. Average age of men
    average_age_men = round(df[df["sex"] == "Male"]["age"].mean(), 1)
    
    # 3. Percentage of people with a Bachelor's degree
    percentage_bachelors = round((df["education"] == "Bachelors").mean() * 100, 1)
    
    # 4. Percentage of people with advanced education making >50K
    advanced_edu = df["education"].isin(["Bachelors", "Masters", "Doctorate"])
    higher_education_rich = round((df[advanced_edu & (df["salary"] == ">50K")].shape[0] / df[advanced_edu].shape[0]) * 100, 1)
    
    # 5. Percentage of people without advanced education making >50K
    lower_education_rich = round((df[~advanced_edu & (df["salary"] == ">50K")].shape[0] / df[~advanced_edu].shape[0]) * 100, 1)
    
    # 6. Minimum hours per week a person works
    min_work_hours = df["hours-per-week"].min()
    
    # 7. Percentage of min-hour workers earning >50K
    min_workers = df[df["hours-per-week"] == min_work_hours]
    rich_percentage = round((min_workers["salary"] == ">50K").mean() * 100, 1)
    
    # 8. Country with the highest percentage of >50K earners
    rich_by_country = df[df["salary"] == ">50K"]["native-country"].value_counts() / df["native-country"].value_counts() * 100
    highest_earning_country = rich_by_country.idxmax()
    highest_earning_country_percentage = round(rich_by_country.max(), 1)
    
    # 9. Most common occupation for >50K earners in India
    top_IN_occupation = df[(df["native-country"] == "India") & (df["salary"] == ">50K")]["occupation"].value_counts().idxmax()
    
    return {
        'race_count': race_count,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'higher_education_rich': higher_education_rich,
        'lower_education_rich': lower_education_rich,
        'min_work_hours': min_work_hours,
        'rich_percentage': rich_percentage,
        'highest_earning_country': highest_earning_country,
        'highest_earning_country_percentage': highest_earning_country_percentage,
        'top_IN_occupation': top_IN_occupation
    }
